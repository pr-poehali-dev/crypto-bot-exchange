import { useState } from 'react';
import { useGameStore } from '@/lib/store';
import { Booster } from '@/types';
import Navigation from '@/components/Navigation';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Zap, Clock, ShoppingCart } from 'lucide-react';
import { toast } from '@/components/ui/use-toast';

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –±—É—Å—Ç–µ—Ä–∞—Ö
const BOOSTERS: Booster[] = [
  {
    id: 'boost-1',
    name: '–£—Å–∫–æ—Ä–∏—Ç–µ–ª—å x2',
    description: '–£–¥–≤–∞–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –∑–∞ –∫–ª–∏–∫',
    price: 100,
    multiplier: 2,
    duration: 60, // 1 –º–∏–Ω—É—Ç–∞
    icon: '‚ö°'
  },
  {
    id: 'boost-2',
    name: '–°—É–ø–µ—Ä-—É—Å–∫–æ—Ä–∏—Ç–µ–ª—å x3',
    description: '–£—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –∑–∞ –∫–ª–∏–∫',
    price: 250,
    multiplier: 3,
    duration: 60, // 1 –º–∏–Ω—É—Ç–∞
    icon: 'üî•'
  },
  {
    id: 'boost-3',
    name: '–ú–µ–≥–∞-—É—Å–∫–æ—Ä–∏—Ç–µ–ª—å x5',
    description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –∑–∞ –∫–ª–∏–∫ –≤ 5 —Ä–∞–∑',
    price: 500,
    multiplier: 5,
    duration: 30, // 30 —Å–µ–∫—É–Ω–¥
    icon: 'üíé'
  }
];

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏ –∑–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏
const initiateYoomoneyPayment = (boosterId: string, amount: number) => {
  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã –Æ–º–∞–Ω–∏
  console.log(`Initiating Yoomoney payment for booster ${boosterId}, amount: ${amount} RUB`);
  return new Promise<boolean>((resolve) => {
    setTimeout(() => resolve(true), 1000);
  });
};

const ShopPage = () => {
  const { coins, activateBooster } = useGameStore();
  const [loading, setLoading] = useState<string | null>(null);
  
  const handleBuyWithCoins = (booster: Booster) => {
    if (coins < booster.price) {
      toast({
        title: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç",
        description: `–ù—É–∂–Ω–æ –µ—â–µ ${booster.price - coins} –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏`,
        variant: "destructive",
      });
      return;
    }
    
    setLoading(booster.id);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
    setTimeout(() => {
      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –±—É—Å—Ç–µ—Ä
      activateBooster(booster);
      
      toast({
        title: "–ë—É—Å—Ç–µ—Ä –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!",
        description: `${booster.name} –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å ${booster.duration} —Å–µ–∫—É–Ω–¥`,
      });
      
      setLoading(null);
    }, 500);
  };
  
  const handleBuyWithMoney = async (booster: Booster) => {
    setLoading(booster.id);
    
    try {
      const success = await initiateYoomoneyPayment(booster.id, booster.price / 10); // –ü—Ä–∏–º–µ—Ä–Ω—ã–π –∫—É—Ä—Å –æ–±–º–µ–Ω–∞
      
      if (success) {
        toast({
          title: "–ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ",
          description: "–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã –ÆMoney",
        });
      }
    } catch (error) {
      toast({
        title: "–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞—Ç–µ–∂",
        variant: "destructive",
      });
    } finally {
      setLoading(null);
    }
  };
  
  return (
    <div className="min-h-screen pb-16">
      <header className="p-4 border-b">
        <h1 className="text-xl font-bold">–ú–∞–≥–∞–∑–∏–Ω –±—É—Å—Ç–µ—Ä–æ–≤</h1>
        <p className="text-muted-foreground">–£ –≤–∞—Å {coins.toFixed(0)} –º–æ–Ω–µ—Ç</p>
      </header>
      
      <main className="p-4 grid gap-4">
        {BOOSTERS.map(booster => (
          <Card key={booster.id}>
            <CardHeader>
              <div className="flex items-center justify-between">
                <CardTitle className="flex items-center gap-2">
                  <span className="text-2xl">{booster.icon}</span>
                  {booster.name}
                </CardTitle>
                <span className="bg-primary/20 px-3 py-1 rounded-full text-sm font-semibold">
                  x{booster.multiplier}
                </span>
              </div>
              <CardDescription>{booster.description}</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="flex items-center gap-2 text-sm">
                <Zap className="w-4 h-4" />
                <span>–ú–Ω–æ–∂–∏—Ç–µ–ª—å: x{booster.multiplier}</span>
              </div>
              <div className="flex items-center gap-2 text-sm mt-1">
                <Clock className="w-4 h-4" />
                <span>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {booster.duration} —Å–µ–∫.</span>
              </div>
            </CardContent>
            <CardFooter className="flex flex-col gap-2">
              <Button 
                className="w-full"
                variant={coins >= booster.price ? "default" : "outline"}
                disabled={loading === booster.id || coins < booster.price}
                onClick={() => handleBuyWithCoins(booster)}
              >
                –ö—É–ø–∏—Ç—å –∑–∞ {booster.price} –º–æ–Ω–µ—Ç
              </Button>
              <Button 
                className="w-full"
                variant="outline"
                disabled={loading === booster.id}
                onClick={() => handleBuyWithMoney(booster)}
              >
                <ShoppingCart className="mr-2 h-4 w-4" />
                –ö—É–ø–∏—Ç—å –∑–∞ {(booster.price / 10).toFixed(0)} ‚ÇΩ
              </Button>
            </CardFooter>
          </Card>
        ))}
      </main>
      
      <Navigation />
    </div>
  );
};

export default ShopPage;
